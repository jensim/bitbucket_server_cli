name: Rust

on:
  push:
    paths:
      - '.github/workflows/rust.yml'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/*.rs'
      - 'integration_test/**'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    needs:
      - fmt
      - clippy
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    continue-on-error: ${{ matrix.rust != 'stable' }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: test-${{ matrix.os }}-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            test-${{ matrix.os }}-${{ matrix.rust }}-
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - name: Build
        run: cargo build --examples --lib --bins
      - name: Test
        run: cargo test --verbose --examples --lib --bins
  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: integration-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            integration-test-
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: "Run integration test"
        run: integration_test/run_integration_test.sh
  clippy:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: Install clippy
        run: rustup component add clippy
      - name: Run clippy
        run: cargo clippy --all-targets -- --deny clippy::all
  fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    continue-on-error: ${{ matrix.rust != 'stable' }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: fmt-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            fmt-${{ matrix.rust }}-
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Run rustfmt
        run: cargo fmt -- --check
  sum:
    needs:
      - fmt
      - clippy
      - test
      - integration-test
    runs-on: ubuntu-latest
    steps:
      - name: "Dummy output"
        shell: bash
        run: echo 'We did it!'
